###########################
#  Configuration
###########################

# use 256 term for pretty colors
set -g default-terminal "screen-256color"

# copy&paste on mac
set-option -g default-command "reattach-to-user-namespace -l zsh"

# increase scroll-back history
set -g history-limit 5000

# use vim key bindings
setw mode-keys vi
# set search highlight
set mode-style "fg=red,bg=blue"

set -g set-clipboard on

unbind-key Escape
bind-key Escape copy-mode

# Setup 'v' & 'V' to begin selection in copy mode.
# `\; send-keys -X rectangle-toggle` is the best thing I came up with to
# imitate original vi behavior.
unbind-key -T copy-mode-vi "v"
bind-key   -T copy-mode-vi "v" send-keys -X begin-selection
unbind-key -T copy-mode-vi "V"
bind-key   -T copy-mode-vi "V" send-keys -X select-line
unbind-key -T copy-mode-vi "C-v"
bind-key   -T copy-mode-vi "C-v" send-keys -X begin-selection \; send-keys -X rectangle-toggle
# C-a & C-e as beggining and end of line in the copy mode.
unbind-key -T copy-mode-vi "C-a"
#bind-key   -T copy-mode-vi "C-a" "send-keys -X start-of-line"
bind-key   -T copy-mode-vi "C-a" send-keys -X back-to-indentation
unbind-key -T copy-mode-vi "C-e"
bind-key   -T copy-mode-vi "C-e" send-keys -X end-of-line
# Enter and y for copy in copy mode.
unbind-key -T copy-mode-vi "y"
bind-key   -T copy-mode-vi "y" send-keys -X copy-pipe-and-cancel
unbind-key -T copy-mode-vi "Enter"
bind-key   -T copy-mode-vi "Enter" send-keys -X copy-selection-and-cancel
# Copy when mouse selection ends
unbind-key -T copy-mode-vi "MouseDragEnd1Pane"
bind-key   -T copy-mode-vi "MouseDragEnd1Pane" send-keys -X copy-pipe-and-cancel
unbind-key -T copy-mode "MouseDragEnd1Pane"
bind-key   -T copy-mode "MouseDragEnd1Pane" send-keys -X copy-pipe-and-cancel

# enable mouse
setw -g mouse on

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# increase repeat time for repeatable commands
set -g repeat-time 1000

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# re-number windows when one is closed
#set -g renumber-windows on

# don't auto rename windows


# start window and pane numbering at 1
set -g base-index 1
set -g pane-base-index 1

# visual notification of activity in other windows
setw monitor-activity on
set visual-activity on

# ------------------------------------------------------------------------------
# status line

# enable utf-8 on status bar
set-option -g status on                # turn the status bar on
set -g status-interval 5               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

set -g status-position bottom
set -g status-bg colour253
set -g status-fg colour239
set -g status-attr dim
set -g status-left ' #S'
set -g status-right '%y/%m/%d '
set -g status-right-length 30
set -g status-left-length 50

setw -g window-status-current-bg colour24
setw -g window-status-current-fg colour81
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #[fg=colour81][#I#F] '

setw -g window-status-bg colour253
setw -g window-status-fg colour239
setw -g window-status-attr none
setw -g window-status-format ' [#I#F] '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour1
setw -g window-status-bell-bg colour245


###########################
#  Key Bindings
###########################

# tmux prefix
unbind C-b
set -g prefix C-s

# go to last window
bind C-s last-window

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# splitting
bind v split-window -h
bind s split-window -v

# Session choosing
#bind S choose-session
bind S run-shell "zsh ~/.config/zsh/funcs/mux"
#bind C send-keys ls \; send-keys Enter
# Switch to previous session when the current one is destroyed.
set-option -g detach-on-destroy off

is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?n?vim?(diff)?$"'

bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"

# This is specific to my keyboard
bind -n M-BSpace if-shell "$is_vim" "send-keys C-w" "send-keys M-BSpace"

run-shell $GOPATH/src/github.com/tmux-plugins/tmux-yank/yank.tmux
run-shell $GOPATH/src/github.com/tmux-plugins/tmux-copycat/copycat.tmux
