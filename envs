#!/bin/bash

# {{{ env

# fix mac LC_CTYPE issue
# see: http://sourabhbajaj.com/python/2014/03/31/fix-valueerror-unknown-locale-utf-8/
if [[ "$LC_CTYPE" == 'UTF-8' ]]; then
  export LC_CTYPE="en_US.UTF-8"
fi

#export TERMINAL=xfce4-terminal
export EDITOR=nvim
#export BROWSER=google-chrome


export PATH=$HOME/bin:/usr/local/bin:$PATH
export MANPATH="/usr/local/man:$MANPATH"

# For coreutils and other GNU tools on macOS.
export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"

# }}}

# {{{ env: go

export GOROOT=/usr/local/opt/go/libexec
export GOTMPDIR=$HOME/go/tmp
export GOCACHE=$HOME/go/cache
export GOPATH=$HOME/go
export GOBIN="$GOPATH/bin"
export GO111MODULE="auto"

export PATH=$GOPATH/bin:$GOROOT/bin:$PATH

# }}}

# {{{ prompt

PROMPT=''

prompt_init() {
    # Check https://github.com/sindresorhus/pure/blob/master/pure.zsh.
    # Fancy prompt symbol: ❯
    # Nice grey color: %F{242}

    readonly newline=$'\n'

    local newline_prefix=${newline}
    if [ -z ${PROMPT} ] ; then
        newline_prefix=''
    fi

    local git_ref
    git_ref=$(command git symbolic-ref --quiet HEAD 2> /dev/null)
    local ret=$?
    if [[ $ret != 0 ]]; then
        [[ $ret == 128 ]] && return  # no git repo.
        git_ref=$(command git rev-parse --short HEAD 2> /dev/null) || return
    fi
    git_ref=${git_ref#refs/heads/}

    local kube_ctx=''
    if [[ -e  ~/.kube/config ]]; then
        kube_ctx=$(cat ~/.kube/config | grep 'current-context:' | cut -d ' ' -f 2)
    fi

    PROMPT="${newline_prefix}%(?.%F{green}.%F{red})%~%f (%F{blue}${git_ref}%f) (%F{blue}${kube_ctx}%f)${newline}$ "
}

setopt PROMPT_SUBST
precmd() { prompt_init }

# }}}

# vim: fdm=marker
