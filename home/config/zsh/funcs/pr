if ! command -v gh >/dev/null ; then
    echo "error: gh is not installed" >&2
fi
if ! command -v hub >/dev/null ; then
    echo "error: hub is not installed" >&2
fi

if [[ $# -ne 1 ]] ; then
    echo "Usage:"
    echo "  $(basename $0) [command]"
    echo
    echo "Available Commands:"
    echo "  c    Create a pull request."
    echo "  r    View the repository in the browser."
    echo "  s    Display pull requests status."
    echo "  v    View the pull request in the browser."
    return 1
fi

_pr_get_repo() {
    local toplevel="$(git rev-parse --show-toplevel)"
    local ret=$?
    if [[ $ret -ne 0 ]] ; then
        echo "error: not a git repo?" >&2
        return $ret
    fi

    local owner="$(dirname "$toplevel")"
    local owner="$(basename "$owner")"
    local repo="$(basename "$toplevel")"

    echo -n "$owner/$repo"
}

pr_create() {
    if [[ -f pawel.pr.md ]] ; then
        hub pull-request -pda kopiczko -F pawel.pr.md --edit
    else
        hub pull-request -pda kopiczko
    fi
}

pr_repo_view() {
    local repo="$(_pr_get_repo)"
    local ret=$?
    if [[ $ret -ne 0 ]] ; then
        return $ret
    fi
    gh repo view -w "$repo"
}

pr_status() {
    local repo="$(_pr_get_repo)"
    local ret=$?
    if [[ $ret -ne 0 ]] ; then
        return $ret
    fi
    gh -R "$repo" pr status
}

pr_view() {
    local repo="$(_pr_get_repo)"
    local ret=$?
    if [[ $ret -ne 0 ]] ; then
        return $ret
    fi
    gh pr view --web
}

local command=$1

case $command in
    c) pr_create ;;
    r) pr_repo_view ;;
    s) pr_status ;;
    v) pr_view ;;
    *) echo "error: unrecognised command $1" 1>&2 ; return 1 ;;
esac

# ex: ts=4 sw=4 et ft=sh
