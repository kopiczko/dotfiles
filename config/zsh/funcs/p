if [[ -z $GOPATH ]]; then
    echo "ERROR GOPATH env variable must be set" >&2
    return 1
fi

if ! command -v fzf >/dev/null; then
    echo "ERROR fzf must be installed" >&2
    return 1
fi

rm -rf /tmp/p-*
readonly dirs_file='/tmp/p-dirs'
readonly dirs_file_giantswarm='/tmp/p-dirs-giantswarm'
[[ -d $GOPATH/src/github.com ]] && find $GOPATH/src/github.com -mindepth 2 -maxdepth 2 -type d  >> "$dirs_file"
[[ -d $GOPATH/src/keybase.io ]] && find $GOPATH/src/keybase.io -mindepth 2 -maxdepth 2 -type d >> "$dirs_file"
[[ -d $GOPATH/src/sigs.k8s.io ]] && find $GOPATH/src/sigs.k8s.io -mindepth 2 -maxdepth 2 -type d >> "$dirs_file"

grep 'github.com/giantswarm/' $dirs_file  > "$dirs_file_giantswarm"
sed -i '/github\.com\/giantswarm/d' "$dirs_file"

sort -fo $dirs_file $dirs_file
sort -fo $dirs_file_giantswarm $dirs_file_giantswarm
readonly dir="$(cat "$dirs_file_giantswarm" "$dirs_file" | fzf)"

if [[ -z "${dir}" ]]; then
    echo "error: no directory found" >&2
    return 1
fi

cd "${dir}"

# ex: ts=4 sw=4 et ft=sh
