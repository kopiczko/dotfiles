if [[ -z $GOPATH ]]; then
    echo "ERROR GOPATH env variable must be set" >&2
    return 1
fi

if ! command -v tmux >/dev/null; then
    echo "ERROR tmux must be installed" >&2
    return 1
fi

if ! command -v fzf-tmux >/dev/null; then
    echo "ERROR fzf-tmux must be installed" >&2
    return 1
fi

local sessions
[[ -n "$TMUX" ]] && sessions="$(tmux list-sessions -F "#{session_name}")\n"
local sessions="$sessions\n$(cd $GOPATH/src/github.com && find . -mindepth 2 -maxdepth 2 -type d | sed 's/^./github.com/')"
local sessions="$sessions\n$(cd $GOPATH/src/keybase.io && find . -mindepth 2 -maxdepth 2 -type d | sed 's/^./keybase.io/')"
local sessions="$sessions\n$(cd $GOPATH/src/sigs.k8s.io && find . -mindepth 1 -maxdepth 1 -type d | sed 's/^./sigs.k8s.io/')"

local session=$(echo $sessions | fzf-tmux -d 80%)
local session_name=$(echo $session | tr '.' '-')


if [[ -z ${session} ]]; then
    return $?
fi

[[ -n "$TMUX" ]] && change="switch-client" || change="attach"


if tmux $change -t "$session_name" 2>/dev/null; then
    return
fi

[[ -d "$GOPATH/src/$session" ]] && session_dir="$GOPATH/src/$session" || session_dir=$(pwd)
tmux new-session -c $session_dir -d -s $session_name && tmux $change -t "$session_name"

# ex: ts=4 sw=4 et ft=sh
