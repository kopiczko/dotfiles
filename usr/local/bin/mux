#!/bin/bash

if [[ -z $GOPATH ]]; then
    echo "ERROR GOPATH env variable must be set" >&2
    return 1
fi

if ! command -v tmux >/dev/null; then
    echo "ERROR tmux must be installed" >&2
    return 1
fi

if ! command -v fzf >/dev/null; then
    echo "ERROR fzf must be installed" >&2
    return 1
fi

if [[ -n $TMUX ]] && [[ $MUX_SESSION_SWITCH -ne 1 ]] ; then
    tmux new-window "MUX_SESSION_SWITCH=1 mux"
    exit $?
fi

readonly sessions_file='/tmp/mux-sessions'
readonly sessions_file_current='/tmp/mux-sessions-current'
rm -rf "$sessions_file" "$sessions_file_current"
[[ -n "$TMUX" ]] && tmux list-sessions -F "#{session_name}" >> "$sessions_file_current"
[[ -d $GOPATH/src/github.com ]] && find $GOPATH/src/github.com -mindepth 2 -maxdepth 2 -type d | sed 's/.*\/src\/github\.com/github.com/' >> "$sessions_file"
[[ -d $GOPATH/src/keybase.io ]] && find $GOPATH/src/keybase.io -mindepth 2 -maxdepth 2 -type d | sed 's/.*\/src\/keybase\.io/keybase.io/' >> "$sessions_file"
[[ -d $GOPATH/src/sigs.k8s.io ]] && find $GOPATH/src/sigs.k8s.io -mindepth 2 -maxdepth 2 -type d | sed 's/.*\/src\/sigs\.k8s\.io/sigs.k8s.io/' >> "$sessions_file"

#sort -o $sessions_file_current $sessions_file_current
sort -o $sessions_file $sessions_file
session=$(cat "$sessions_file_current" "$sessions_file" | fzf)
session_name=$(echo $session | tr '.' '-')
rm -rf "$sessions_file" "$sessions_file_current"

if [[ -z ${session} ]]; then
    return $?
fi

[[ -n "$TMUX" ]] && change="switch-client" || change="attach"

tmux $change -t "$session_name" 2>/dev/null && exit 0

[[ -d "$GOPATH/src/$session" ]] && session_dir="$GOPATH/src/$session" || session_dir=$(pwd)
tmux new-session -c $session_dir -d -s $session_name && tmux $change -t "$session_name"

# ex: ts=4 sw=4 et ft=sh
